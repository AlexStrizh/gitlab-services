#Область СлужебныйПрограммныйИнтерфейс

// @unit-test
Процедура Тест_ПараметрыСервисаПолучателя(Фреймворк) Экспорт

	НачатьТранзакцию();	
	Попытка
		
		Константы.AccessTokenReceiver.Установить("998");
		Константы.ТаймаутДоставкиПолучатель.Установить(999);

		Результат = НастройкаСервисов.ПараметрыСервисаПолучателя();
		Фреймворк.ПроверитьРавенство(Результат.Количество(), 3);
		Фреймворк.ПроверитьРавенство(Результат.Адрес, "localhost/receiver/hs/gitlab");
		Фреймворк.ПроверитьРавенство(Результат.Token, "998");
		Фреймворк.ПроверитьРавенство(Результат.Таймаут, 999);		

		Константы.ТаймаутДоставкиПолучатель.Установить(-5);
		Результат = НастройкаСервисов.ПараметрыСервисаПолучателя();
		Фреймворк.ПроверитьРавенство(Результат.Таймаут, 0);

		ОтменитьТранзакцию();					
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры

// @unit-test
Процедура Тест_НастройкиСервисовGitLab(Фреймворк) Экспорт

	НачатьТранзакцию();	
	Попытка
		
		Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить(Истина);
		Константы.ИмяФайлаНастроекМаршрутизации.Установить("ИмяФайла.json");
		Константы.GitLabUserPrivateToken.Установить("GitLabUserPrivateToken");
		Константы.ТаймаутGitLab.Установить(998);
		Константы.AccessTokenReceiver.Установить("AccessTokenReceiver");
		Константы.ТаймаутДоставкиПолучатель.Установить(999);

		Результат = НастройкаСервисов.НастройкиСервисовGitLab();
		Фреймворк.ПроверитьТип(Результат, "ФиксированнаяСтруктура");
		Фреймворк.ПроверитьРавенство(Результат.Количество(), 6);
		Фреймворк.ПроверитьИстину(Результат.ЗагружатьФайлыИзВнешнегоХранилища);
		Фреймворк.ПроверитьРавенство(Результат.ИмяФайлаНастроекМаршрутизации, "ИмяФайла.json");
		Фреймворк.ПроверитьРавенство(Результат.GitLabUserPrivateToken, "GitLabUserPrivateToken");		
		Фреймворк.ПроверитьРавенство(Результат.ТаймаутGitLab, 998);		
		Фреймворк.ПроверитьРавенство(Результат.AccessTokenReceiver, "AccessTokenReceiver");
		Фреймворк.ПроверитьРавенство(Результат.ТаймаутДоставкиПолучатель, 999);		
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры

#КонецОбласти
