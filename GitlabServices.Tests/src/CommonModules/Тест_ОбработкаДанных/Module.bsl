#Область СлужебныйПрограммныйИнтерфейс

// @unit-test:dev
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура НачатьЗапускОбработкиДанныхРучнойЗапуск(Фреймворк) Экспорт
	
	// given
	Тест_ОбработчикиСобытийСервер.УдалитьВсеОбработчикиСобытий();
	ОбработчикСобытия = Тест_ОбработчикиСобытийСервер.ДобавитьОбработчикСобытий("ЮнитТест1", "РучнойЗапуск");
	// when
	Результат = ОбработкаДанных.НачатьЗапускОбработкиДанных(ОбработчикСобытия.Ссылка, "какой-то коммит...");
	// then
	Фреймворк.ПроверитьТип(Результат, "ФоновоеЗадание");

КонецПроцедуры

// @unit-test:dev
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура НачатьЗапускОбработкиДанныхWebhook(Фреймворк) Экспорт
	
	// given
	Тест_ОбработчикиСобытийСервер.УдалитьВсеОбработчикиСобытий();
	ОбработчикСобытия = Тест_ОбработчикиСобытийСервер.ДобавитьОбработчикСобытий("ЮнитТест1", "Webhook");
	Данные = Новый Соответствие;
	Данные.Вставить("checkout_sha", "какой-то коммит...");
	// when
	Результат = ОбработкаДанных.НачатьЗапускОбработкиДанных(ОбработчикСобытия.Ссылка, Данные);
	// then
	Фреймворк.ПроверитьТип(Результат, "ФоновоеЗадание");

КонецПроцедуры

// @unit-test:dev
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура НачатьЗапускОбработкиДанныхWebhookОтсутствуетCheckoutSHA(Фреймворк) Экспорт
	
	// given
	ПараметрыОтбораЖурналаРегистрации = Новый Структура("ДатаНачала, Уровень, Событие",	ТекущаяДата(), УровеньЖурналаРегистрации.Ошибка, "ОбработчикиСобытий.Core.ОбработкаДанных" );
	Тест_ОбработчикиСобытийСервер.УдалитьВсеОбработчикиСобытий();
	ОбработчикСобытия = Тест_ОбработчикиСобытийСервер.ДобавитьОбработчикСобытий("ЮнитТест1", "Webhook");
	Данные = Новый Соответствие;
	
	// when
	Результат = ОбработкаДанных.НачатьЗапускОбработкиДанных(ОбработчикСобытия.Ссылка, Данные);
	Тест_ОбщийМодульСервер.Пауза(2);
	ЖурналРегистрации = Новый ТаблицаЗначений();
	ВыгрузитьЖурналРегистрации(ЖурналРегистрации, ПараметрыОтбораЖурналаРегистрации, "Дата, ПредставлениеСобытия, ПредставлениеМетаданных, ПредставлениеДанных, Комментарий");
	
	// then
	Фреймворк.ПроверитьРавенство(Результат, Неопределено);
	Фреймворк.ПроверитьВхождение(ЖурналРегистрации[0].Комментарий, "В обрабатываемых данных отсутствует checkout_sha");

КонецПроцедуры

// @unit-test:dev
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура НачатьЗапускОбработкиДанныхWebhookОшибочныйТипДанных(Фреймворк) Экспорт
	
	// given
	ПараметрыОтбораЖурналаРегистрации = Новый Структура("ДатаНачала, Уровень, Событие",	ТекущаяДата(), УровеньЖурналаРегистрации.Ошибка, "ОбработчикиСобытий.Core.ОбработкаДанных" );
	Тест_ОбработчикиСобытийСервер.УдалитьВсеОбработчикиСобытий();
	ОбработчикСобытия = Тест_ОбработчикиСобытийСервер.ДобавитьОбработчикСобытий("ЮнитТест1", "Webhook");
	Данные = Новый Массив;
	
	// when
	Результат = ОбработкаДанных.НачатьЗапускОбработкиДанных(ОбработчикСобытия.Ссылка, Данные);
	Тест_ОбщийМодульСервер.Пауза(2);
	ЖурналРегистрации = Новый ТаблицаЗначений();
	ВыгрузитьЖурналРегистрации(ЖурналРегистрации, ПараметрыОтбораЖурналаРегистрации, "Дата, ПредставлениеСобытия, ПредставлениеМетаданных, ПредставлениеДанных, Комментарий");
	
	// then
	Фреймворк.ПроверитьРавенство(Результат, Неопределено);
	Фреймворк.ПроверитьВхождение(ЖурналРегистрации[0].Комментарий, "Неподдерживаемый формат обрабатываемых данных");

КонецПроцедуры

// @unit-test:dev
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура НачатьЗапускОбработкиДанныхЕстьАктивноеЗадание(Фреймворк) Экспорт
	
	// given
	ПараметрыОтбораЖурналаРегистрации = Новый Структура("ДатаНачала, Уровень, Событие",	ТекущаяДата(), УровеньЖурналаРегистрации.Предупреждение, "ОбработчикиСобытий.Core.ОбработкаДанных" );
	Тест_ОбработчикиСобытийСервер.УдалитьВсеОбработчикиСобытий();
	ОбработчикСобытия = Тест_ОбработчикиСобытийСервер.ДобавитьОбработчикСобытий("ЮнитТест1", "РучнойЗапуск");
	
	// when
	Результат = ОбработкаДанных.НачатьЗапускОбработкиДанных(ОбработчикСобытия.Ссылка, "какой-то коммит...");
	Результат = ОбработкаДанных.НачатьЗапускОбработкиДанных(ОбработчикСобытия.Ссылка, "какой-то коммит...");
	Тест_ОбщийМодульСервер.Пауза(2);
	ЖурналРегистрации = Новый ТаблицаЗначений();
	ВыгрузитьЖурналРегистрации(ЖурналРегистрации, ПараметрыОтбораЖурналаРегистрации, "Дата, ПредставлениеСобытия, ПредставлениеМетаданных, ПредставлениеДанных, Комментарий");
	
	// then
	Фреймворк.ПроверитьРавенство(Результат, Неопределено);
	Фреймворк.ПроверитьВхождение(ЖурналРегистрации[0].Комментарий, "[ какой-то коммит... ]: задание уже было запущено и активно");

КонецПроцедуры

// @unit-test:dev
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура НачатьЗапускОбработкиДанныхОшибкаЗапускаЗадания(Фреймворк) Экспорт
	
	// given
	ПараметрыОтбораЖурналаРегистрации = Новый Структура("ДатаНачала, Уровень, Событие",	ТекущаяДата(), УровеньЖурналаРегистрации.Ошибка, "ОбработчикиСобытий.Core.ОбработкаДанных" );
	Тест_ОбработчикиСобытийСервер.УдалитьВсеОбработчикиСобытий();
	ОбработчикСобытия = Тест_ОбработчикиСобытийСервер.ДобавитьОбработчикСобытий("ЮнитТест1", "Webhook");
	Данные = Новый Соответствие;
	Данные.Вставить("checkout_sha", "какой-то коммит...");
	Данные.Вставить("error", Новый HTTPСоединение("localhost"));
	
	// when
	Результат = ОбработкаДанных.НачатьЗапускОбработкиДанных(ОбработчикСобытия.Ссылка, Данные);
	Тест_ОбщийМодульСервер.Пауза(2);
	ЖурналРегистрации = Новый ТаблицаЗначений();
	ВыгрузитьЖурналРегистрации(ЖурналРегистрации, ПараметрыОтбораЖурналаРегистрации, "Дата, ПредставлениеСобытия, ПредставлениеМетаданных, ПредставлениеДанных, Комментарий");
	
	// then
	Фреймворк.ПроверитьРавенство(Результат, Неопределено);
	Фреймворк.ПроверитьВхождение(ЖурналРегистрации[0].Комментарий, "[ какой-то коммит... ]: ошибка запуска фонового задания обработки данных");

КонецПроцедуры

#КонецОбласти