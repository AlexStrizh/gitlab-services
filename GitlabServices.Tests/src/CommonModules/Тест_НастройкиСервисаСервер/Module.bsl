#Область СлужебныйПрограммныйИнтерфейс

// @unit-test
Процедура ПараметрыПолучателя(Фреймворк) Экспорт

	НачатьТранзакцию();	
	Попытка
		// given
		Константы.AccessTokenReceiver.Установить("998");
		Константы.ТаймаутДоставкиФайла.Установить(999);
		// when
		Результат = НастройкаСервисов.ПараметрыПолучателя();
		// then
		Фреймворк.ПроверитьРавенство(Результат.Количество(), 3);
		Фреймворк.ПроверитьРавенство(Результат.Адрес, "localhost/receiver/hs/gitlab");
		Фреймворк.ПроверитьРавенство(Результат.Token, "998");
		Фреймворк.ПроверитьРавенство(Результат.Таймаут, 999);		

		ОтменитьТранзакцию();					
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры

// @unit-test
Процедура ПараметрыПолучателяОтрицательныйТаймаутДоставкиФайла(Фреймворк) Экспорт

	НачатьТранзакцию();	
	Попытка
		// given
		Константы.AccessTokenReceiver.Установить("998");
		Константы.ТаймаутДоставкиФайла.Установить(999);
		// when
		Результат = НастройкаСервисов.ПараметрыПолучателя();
		// then
		Фреймворк.ПроверитьРавенство(Результат.Количество(), 3);
		Фреймворк.ПроверитьРавенство(Результат.Адрес, "localhost/receiver/hs/gitlab");
		Фреймворк.ПроверитьРавенство(Результат.Token, "998");
		Константы.ТаймаутДоставкиФайла.Установить(-5);
		Результат = НастройкаСервисов.ПараметрыПолучателя();
		Фреймворк.ПроверитьРавенство(Результат.Таймаут, 0);

		ОтменитьТранзакцию();					
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры

// @unit-test
Процедура ТекущиеНастройки(Фреймворк) Экспорт

	НачатьТранзакцию();	
	Попытка
		// given		
		Константы.ОбрабатыватьЗапросыВнешнегоХранилища.Установить(Истина);
		Константы.ИмяФайлаНастроекМаршрутизации.Установить("ИмяФайла.json");
		Константы.GitLabUserPrivateToken.Установить("GitLabUserPrivateToken");
		Константы.ТаймаутGitLab.Установить(998);
		Константы.AccessTokenReceiver.Установить("AccessTokenReceiver");
		Константы.ТаймаутДоставкиФайла.Установить(999);
		// when
		Результат = НастройкаСервисов.ТекущиеНастройки();
		// then
		Фреймворк.ПроверитьТип(Результат, "ФиксированнаяСтруктура");
		Фреймворк.ПроверитьРавенство(Результат.Количество(), 6);
		Фреймворк.ПроверитьИстину(Результат.ОбрабатыватьЗапросыВнешнегоХранилища);
		Фреймворк.ПроверитьРавенство(Результат.ИмяФайлаНастроекМаршрутизации, "ИмяФайла.json");
		Фреймворк.ПроверитьРавенство(Результат.GitLabUserPrivateToken, "GitLabUserPrivateToken");		
		Фреймворк.ПроверитьРавенство(Результат.ТаймаутGitLab, 998);		
		Фреймворк.ПроверитьРавенство(Результат.AccessTokenReceiver, "AccessTokenReceiver");
		Фреймворк.ПроверитьРавенство(Результат.ТаймаутДоставкиФайла, 999);		
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры

#EndRegion
