#Область ПрограммныйИнтерфейс

// TODO ошибка в описании параметра ПараметрыДоставки, причем тут НастрСервиса? проверить

// Отправка файла в информационную базу получателя.
// На конечных точках (базах получателях) должен быть реализован API обновления внешних отчетов и обработок:
// https://app.swaggerhub.com/apis-docs/astrizhachuk/gitlab-services-receiver/1.0.0
// Адрес подключения определяется из параметра доставки. Если процедура вызывается в фоновом задании, то для
// передачи информации о результате выполнения используется объект СообщениеПользователю().
// 
// Параметры:
// 	ИмяФайла - Строка - имя файла, по которому производится поиск и замена внешних отчетов и обработок (UTF-8);
// 	Данные - ДвоичныеДанные - тело файла в двоичном формате;
// 	ПараметрыДоставки - (См. НастройкиСервиса.ПараметрыПолучателя);
//
Процедура ОтправитьФайл( Знач ИмяФайла, Знач Данные, Знач ПараметрыДоставки ) Экспорт
	
	Перем Заголовки;
	Перем ТекстТелаОтвета;
	Перем Сообщение;
		
	ОтправитьФайлПроверкаВходящихПараметров( ИмяФайла, Данные, ПараметрыДоставки );
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить( "Token", ПараметрыДоставки.Token );
	Заголовки.Вставить( "Name", КодироватьСтроку(ИмяФайла, СпособКодированияСтроки.URLВКодировкеURL) );
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить( "Заголовки", Заголовки );
	ДополнительныеПараметры.Вставить( "Таймаут", ПараметрыДоставки.Таймаут );
	
	Ответ = КоннекторHTTP.Post( ПараметрыДоставки.Адрес, Данные, ДополнительныеПараметры );
	
	Если ( НЕ КодыСостоянияHTTPКлиентСерверПовтИсп.isOk(Ответ.КодСостояния) ) Тогда
		
		ВызватьИсключение "Error: " + Ответ.КодСостояния;
		
	КонецЕсли;
	
	ТекстТелаОтвета = КоннекторHTTP.КакТекст(Ответ, КодировкаТекста.UTF8);
	
	// TODO переделать на логирование в ЖР
	Сообщение = Новый СообщениеПользователю();	
	Шаблон = НСтр( "ru = 'Адрес доставки: %1; Файл: %2; Сообщение: %3'" );
	Сообщение.Текст = СтрШаблон( Шаблон, ПараметрыДоставки.Адрес, ИмяФайла, ТекстТелаОтвета );
	Сообщение.Сообщить();								
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтправитьФайлПроверкаВходящихПараметров( Знач ИмяФайла, Знач Данные, Знач ПараметрыДоставки )
	
	Перем СтруктураПараметров;

	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр( "Получатели.ОтправитьФайл",
													"ИмяФайла",
													ИмяФайла,
													Тип("Строка") );
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(	"Получатели.ОтправитьФайл",
													"Данные",
													Данные,
													Тип("ДвоичныеДанные") );
	
	СтруктураПараметров = Новый Структура( "Адрес, Token", Тип("Строка"), Тип("Строка") );
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр( "Получатели.ОтправитьФайл",
													"ПараметрыДоставки",
													ПараметрыДоставки,
													Тип("Структура"),
													СтруктураПараметров );

КонецПроцедуры

#КонецОбласти