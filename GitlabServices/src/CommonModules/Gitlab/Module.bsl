#Область ПрограммныйИнтерфейс

// Возвращает параметры соединения к серверу Gitlab по адресу и пользовательским настройкам подключения.
// 
// Параметры:
// 	Адрес - Строка - адрес к серверу Gitlab, например, "http://www.example.org";
//
// Возвращаемое значение:
// 	Структура - Описание:
// * Адрес - Строка - адрес к серверу GitLab;
// * Token - Строка - token доступа к серверу GitLab из текущих настроек сервисов;
// * Таймаут - Число - таймаут подключения к Gitlab из текущих настроек сервисов;
//
Функция ПараметрыСоединения( Знач Адрес ) Экспорт
	
	Перем ТекущиеНастройки;
	Перем Результат;
	
	ТекущиеНастройки = НастройкаСервисов.ТекущиеНастройки();
	
	Результат = Новый Структура();
	Результат.Вставить( "Адрес", Адрес );
	Результат.Вставить( "Token", ТекущиеНастройки.GitLabUserPrivateToken );
	Результат.Вставить( "Таймаут", ТекущиеНастройки.ТаймаутGitLab );
	
	Возврат Результат;
	
КонецФункции

// Получает с сервера GitLab файл и формирует его описание.
// 
// Параметры:
// 	ПараметрыСоединения - (См. Gitlab.ПараметрыСоединения)
// 	ПутьКФайлу - Строка - относительный путь к получаемому файлу в URL кодировке, например,
// 							"/api/v4/projects/1/repository/files/D0%BA%D0%B0%201.epf/raw?ref=ef3529e5486ff";
// 	
// Возвращаемое значение:
// 	Структура - описание:
// * ПутьКФайлуRAW - Строка - относительный путь к файлу в RAW формате;
// * ИмяФайла - Строка - имя файла в кодировке UTF-8;
// * ДвоичныеДанные - ДвоичныеДанные - данные файла;
// * ОписаниеОшибки - Строка - текст с описанием ошибки получения файла с сервера;
// 
Функция ПолучитьФайл( Знач ПараметрыСоединения, Знач ПутьКФайлу ) Экспорт

	Перем Адрес;
	Перем Заголовки;
	Перем ДополнительныеПараметры;
	Перем ИмяФайла;
	Перем Ответ;
	Перем Результат;
	
	Адрес = ПараметрыСоединения.Адрес + ПутьКФайлу;
	
	Результат = ОписаниеФайла();
	Результат.ПутьКФайлуRAW = ПутьКФайлу;

	Попытка

		Заголовки = Новый Соответствие();
		Заголовки.Вставить( "PRIVATE-TOKEN", ПараметрыСоединения.Token );
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить( "Заголовки", Заголовки );
		ДополнительныеПараметры.Вставить( "Таймаут", ПараметрыСоединения.Таймаут );
		
		Ответ = КоннекторHTTP.Get( Адрес, Неопределено, ДополнительныеПараметры );

		Если ( НЕ КодыСостоянияHTTPКлиентСерверПовтИсп.isOk(Ответ.КодСостояния) ) Тогда
			
			ВызватьИсключение КодыСостоянияHTTPКлиентСерверПовтИсп.НайтиИдентификаторПоКоду( Ответ.КодСостояния );
		
		КонецЕсли;
		
		ИмяФайла = Ответ.Заголовки.Получить( "X-Gitlab-File-Name" );
		
		Если ( ИмяФайла = Неопределено ) Тогда
			
			ВызватьИсключение НСтр("ru = 'Файл не найден.'");
			
		КонецЕсли;

		Если ( НЕ ЗначениеЗаполнено(Ответ.Тело) ) Тогда
			
			ВызватьИсключение НСтр("ru = 'Пустой файл.'");
			
		КонецЕсли;

		Результат.ИмяФайла = ИмяФайла;
		Результат.ДвоичныеДанные = Ответ.Тело;
		
	Исключение
	
		Результат.ОписаниеОшибки = СтрШаблон( НСтр("ru = 'Ошибка получения файла: %1'"),
										Адрес + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()) );
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

// Получает с сервера GitLab файлы и формирует их описание.
// 
// Параметры:
// 	ПараметрыСоединения - (См. Gitlab.ПараметрыСоединения)
// 	ПутиКФайлам - Массив из Строка - массив относительных путей к получаемым файлам в URL кодировке, например,
// 							"/api/v4/projects/1/repository/files/D0%BA%D0%B0%201.epf/raw?ref=ef3529e5486ff";
// 	
// Возвращаемое значение:
// 	Массив из Структура:
// * ПутьКФайлуRAW - Строка - относительный путь к файлу в RAW формате;
// * ИмяФайла - Строка - имя файла в кодировке UTF-8;
// * ДвоичныеДанные - ДвоичныеДанные - данные файла;
// * ОписаниеОшибки - Строка - текст с описанием ошибки получения файла с сервера;
// 
Функция ПолучитьФайлы( Знач ПараметрыСоединения, Знач ПутиКФайлам ) Экспорт
	
	Перем Результат;

	Результат = Новый Массив;
	
	Для Каждого ПутьКФайлу Из ПутиКФайлам Цикл
		
		Результат.Добавить( ПолучитьФайл(ПараметрыСоединения, ПутьКФайлу) );
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// TODO перепроверить описание
// Заполняет описание отправляемых файлов двоичными данными (RAW) с сервера GitLab.
// 
// Параметры:
// 	ОтправляемыеДанные - ТаблицаЗначений - описание:
// * Коммит - Строка - идентификатор коммита;
// * Дата - Дата - дата коммита;
// * ИмяФайла - Строка - имя файла;
// * ПолноеИмяФайла - Строка - имя файла вместе с директориями;
// * ПутьКФайлу - Строка - относительный путь к файлу RAW;
// * Операция - Строка - вид операции над файлом (A - добавлен, D - удален, M - изменен);
// * ДвоичныеДанные - ДвоичныеДанные - тело файла;
// * ОписаниеОшибки - Строка - описание ошибки при получении файла с сервера, если она была;
// 	ПараметрыСоединения - (См. Gitlab.ПараметрыСоединения):
//
Процедура ЗаполнитьОтправляемыеДанныеФайлами( ОтправляемыеДанные, Знач ПараметрыСоединения ) Экспорт

	Перем ПутиКФайлам;
	Перем Файл;
	Перем Файлы;

	ПутиКФайлам = ОтправляемыеДанные.ВыгрузитьКолонку( "ПутьКФайлу" );
	Файлы = ПолучитьФайлы( ПараметрыСоединения, ПутиКФайлам );
	
	Для каждого ОписаниеФайла Из Файлы Цикл
			
		Файл = ОтправляемыеДанные.Найти( ОписаниеФайла.ПутьКФайлуRAW, "ПутьКФайлу" );
		ЗаполнитьЗначенияСвойств( Файл, ОписаниеФайла );

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает перекодированный в URL относительный путь к файлу в RAW формате. 
// 
// Параметры:
// 	ProjectId - Строка - id проекта;
// 	ПутьКФайлу - Строка - относительный путь к файлу в репозитории (вместе с именем файла);
// 	Commit - Строка - сommit SHA;
// 
// Возвращаемое значение:
// 	Строка - перекодированный в URL относительный путь к файлу.
//
Функция ПутьКФайлуRAW( Знач ProjectId, Знач ПутьКФайлу, Знач Commit ) Экспорт
	
	Перем Шаблон;
	
	Шаблон = "/api/v4/projects/%1/repository/files/%2/raw?ref=%3";
	ПутьКФайлу = КодироватьСтроку( ПутьКФайлу, СпособКодированияСтроки.КодировкаURL );
	
	Возврат СтрШаблон(Шаблон, ProjectId, ПутьКФайлу, Commit);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеФайла()

	Перем Результат;
	
	Результат = Новый Структура();
	Результат.Вставить( "ПутьКФайлуRAW", "" );
	Результат.Вставить( "ИмяФайла", "" );
	Результат.Вставить( "ДвоичныеДанные", Неопределено );
	Результат.Вставить( "ОписаниеОшибки", "" );
	
	Возврат Результат;

КонецФункции

#КонецОбласти