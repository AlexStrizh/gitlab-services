//TODO весь модуль к удалению
// 
#Область ПрограммныйИнтерфейс

#Область ФоновыеЗадания

// Поиск всех фоновых заданий по наименованию.
// 
// Параметры:
// 	Наименование - Строка - наименование фонового задания;
// Возвращаемое значение:
// 	- Массив из ФоновоеЗадание - найденные фоновые задания;
Функция ЗадачиПоНаименованию(Знач Наименование) Экспорт
	
	Перем ПараметрыОтбора;
	Перем ВсеФоновыеЗадания;
	
	ПараметрыОтбора = Новый Структура("Наименование", Наименование);
	ВсеФоновыеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(ПараметрыОтбора);
	
	Возврат ВсеФоновыеЗадания;
	
КонецФункции

#КонецОбласти

#Область ДанныеЗапроса

// Подготавливает необходимые данные для формирования запроса к api GitLab на получение данных по всем запросам на merge.  
// 
// Параметры:
//	ДанныеТелаЗапроса - Соответствие - преобразованные в Соответствие данные HTTP-запроса;
// Возвращаемое значение:
// 	Структура - Описание:
// * СекретныйКлюч - Строка - ключ пользователя с доступом к api GitLab;
// * URL - Строка - веб-адрес запроса на merge;
Функция СформироватьЗапросНаMergeRequests(Знач ДанныеТелаЗапроса) Экспорт
	
	Перем ПараметрыПроекта;
	
	Перем Схема;
	Перем ИмяСервера;
	Перем Проект;
	
	Перем Запрос;
	
	ПараметрыПроекта = ПараметрыПроектаИзТелаЗапроса(ДанныеТелаЗапроса);
	
	Схема      = ПараметрыПроекта.СтруктураURI.Схема;
	ИмяСервера = ПараметрыПроекта.СтруктураURI.Сервер;
	Проект     = ПараметрыПроекта.Идентификатор;
	
	Запрос = Новый Структура;
	Запрос.Вставить("URL", СтрШаблон("%1://%2/api/v4/projects/%3/merge_requests", Схема, ИмяСервера, Проект));
	Запрос.Вставить("СекретныйКлюч", НастройкаСервисов.GitLabUserPrivateToken());
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РаботаСДанными

// TODO к удалению

// Получает параметры проекта репозитория из преобразованных в Соответствие данных тела запроса.
// 
// Параметры:
// 	ДанныеТелаЗапроса - (См. ПолучитьДанныеТелаЗапроса.ДанныеТелаЗапроса).
// Возвращаемое значение:
// 	Структура - Описание:
// * Идентификатор - Строка - идентификатор проекта.
// * СтруктураURI - (См. ОбщегоНазначенияКлиентСервер.СтруктураURI). 
Функция ПараметрыПроектаИзТелаЗапроса(Знач ДанныеТелаЗапроса)
	
	Перем ОписаниеПроекта;
	Перем ВебАдрес;
	Перем Идентификатор;
	Перем СтруктураURI;
	
	Перем Результат;
	
	Результат = Новый Структура;
	
	Если ДанныеТелаЗапроса = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	ОписаниеПроекта = ДанныеТелаЗапроса.Получить("project");
	
	ВебАдрес      = ОписаниеПроекта.Получить("web_url");
	Идентификатор = Строка(ОписаниеПроекта.Получить("id"));
	Результат.Вставить("Идентификатор", Идентификатор);
	
	// TODO перепроверить вызов
	СтруктураURI = КоннекторHTTP.РазобратьURL(ВебАдрес);
	НачалоПуть = СтрНайти(ВебАдрес, СтруктураURI.Путь) - 1;
	URLСервера = ?(НачалоПуть >= 0, Лев(ВебАдрес, НачалоПуть), "" );
	СтруктураURI.Вставить( "URLСервера", URLСервера );
	Результат.Вставить("СтруктураURI", Новый ФиксированнаяСтруктура(СтруктураURI));
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти