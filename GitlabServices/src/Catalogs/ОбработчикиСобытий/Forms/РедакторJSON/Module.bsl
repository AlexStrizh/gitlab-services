#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем КлючЗаписи;
	Перем ЗаписьСуществует;
	Перем КомандаСуществует;
	Перем ДанныеЗаполнения;
	
//	КлючЗаписи = Параметры.КлючЗаписи;
//	Команда    = Параметры.ИмяКоманды;
//	
//	ЗаписьСуществует = НЕ (КлючЗаписи = Неопределено
//		ИЛИ ТипЗнч(КлючЗаписи) <> Тип("РегистрСведенийКлючЗаписи.ДанныеОбработчиковСобытий")
//		ИЛИ КлючЗаписи.Пустой());
//		
//	КомандаСуществует = НЕ (ПустаяСтрока(Команда));


//	
//	Если НЕ (ЗаписьСуществует ИЛИ КомандаСуществует) Тогда
//		Отказ = Истина;
//		Возврат;
//	КонецЕсли;
	
	ДанныеЗаполнения = Неопределено;
	ДанныеЗаполнения = ИсходныеДанныеЗапросаВФорматеJSON( КлючЗаписи, Параметры.ИмяКоманды );
	ЗаполнитьЗначенияНаФорме( ДанныеЗаполнения, Параметры.ИмяКоманды );

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ИнициализироватьФорму();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПользовательскийВариантПриИзменении(Элемент)
	
	Перем ЭтоСнятиеГалочки;
	Перем Режим;
	Перем Оповещение;
	
	ТекущиеДанные = Элементы.Коммиты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоСнятиеГалочки = НЕ ЭтотОбъект.ПользовательскийВариант;
	
	Если ЭтоСнятиеГалочки Тогда
		
		ДополнительныеПараметры = Новый ФиксированнаяСтруктура("Ключ, Коммит", Параметры.Ключ, ТекущиеДанные.Коммит);

		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаНастройкиПоУмолчанию", ЭтаФорма, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Сбросить настройки на значения по умолчанию?'"), Режим);
		
	Иначе
		
		УстановитьРежимРедактированияJSON(ЭтотОбъект.ПользовательскийВариант);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКоммиты

&НаКлиенте
Процедура КоммитыПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.ТекстJSON = Элемент.ТекущиеДанные.ТекстJSON;
	УстановитьРежимРедактированияJSON(Элемент.ТекущиеДанные.ПользовательскийВариант);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьJSON(Команда)
	
	Перем ТекущиеДанные;
	Перем СохраняемыеДанные;
	Перем ДополнительныеПараметры;
	Перем Режим;
	Перем Оповещение;
	
	ТекущиеДанные = Элементы.Коммиты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохраняемыеДанные = Новый Структура("Коммит, JSON", ТекущиеДанные.Коммит, ТекстJSON);
	ДополнительныеПараметры = Новый ФиксированнаяСтруктура("Ключ, СохраняемыеДанные", Параметры.Ключ, СохраняемыеДанные);
	
	Если ЕстьПользовательскиеНастройки(ДополнительныеПараметры) Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаСохранитьJSON", ЭтаФорма, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Пользовательские настройки уже существуют, перезаписать?'"), Режим);
	Иначе
		СохранитьJSONНаКлиенте(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// TODO рефакторинг
// 
// Получение исходных данных запроса и настроек маршрутизации в формате json из сохраненных данных запроса.
// 
// Параметры:
// 	КлючЗаписи - РегистрСведенийКлючЗаписи.ОбработчикиСобытий - ключ записи с сохраненными записями;
// 	Действие - "ОткрытьJSONТелаЗапроса", "ОткрытьJSONМаршрутизации";
// Возвращаемое значение:
// 	- Неопределено - если не найдена запись с данными на регистре сведений; 
// 	- Строка - json HTTP-запроса;
// 	- ТаблицаЗначений - таблица настроек маршрутизации в формате json:
// * Коммит - Строка - номер коммита; 
// * ТекстJSON - Строка - json настроек маршрутизации;
Функция ИсходныеДанныеЗапросаВФорматеJSON(Знач КлючЗаписи, Знач Действие)
	
	Перем ДанныеТелаЗапроса;
	Перем Настройки;
	Перем НоваяСтрока;
	Перем Результат;
	
	Результат = Неопределено;

	//ДанныеТелаЗапроса = РегистрыСведений.ДанныеОбработчиковСобытий.ПолучитьДанныеТелаЗапроса(КлючЗаписи);
	
	ДанныеТелаЗапроса = ОбработчикиСобытий.ЗагрузитьДанныеЗапроса( КлючЗаписи.ОбработчикСобытия, КлючЗаписи.Ключ );
	
	Если ДанныеТелаЗапроса = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если Действие = "ОткрытьJSONТелаЗапроса" Тогда
		
		Результат = "";
		Результат = ДанныеТелаЗапроса.Получить("json");
		
	ИначеЕсли Действие = "ОткрытьJSONМаршрутизации" Тогда
		
		Результат = Новый ТаблицаЗначений;
		Результат.Колонки.Добавить("Коммит", Новый ОписаниеТипов("Строка"));
		Результат.Колонки.Добавить("ТекстJSON", Новый ОписаниеТипов("Строка"));
		Результат.Колонки.Добавить("ПользовательскийВариант", Новый ОписаниеТипов("Булево"));
		
		Коммиты2 = ДанныеТелаЗапроса.Получить("commits");
		Для каждого Коммит Из Коммиты2 Цикл
			НоваяСтрока = Результат.Добавить();
			НоваяСтрока.Коммит = Коммит.Получить("id");
			
			ПользовательскиеНастройки = Коммит.Получить("user_settings");
			ЕстьПользовательскиеНастройки = ?(ПользовательскиеНастройки <> Неопределено, Истина, Ложь);
			
			Если ЕстьПользовательскиеНастройки Тогда
				Настройки = ПользовательскиеНастройки;
			Иначе
				Настройки = Коммит.Получить("settings");
			КонецЕсли;
			
			Если Настройки = Неопределено Тогда
				НоваяСтрока.ТекстJSON = "";
				Продолжить;
			КонецЕсли;
			НоваяСтрока.ТекстJSON = Настройки.Получить("json");
			НоваяСтрока.ПользовательскийВариант = ЕстьПользовательскиеНастройки;
		КонецЦикла;
		
	Иначе
		
		Результат = Неопределено;
		
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции


// Проверяет наличие записи о пользовательских настройках маршрутизации в данных тела запроса для определенного коммита.
// 
// Параметры:
//	ДанныеТелаЗапроса - Соответствие - преобразованные в Соответствие данные HTTP-запроса;
// 	ИдентификаторКоммита - Строка - идентификационный номер коммита;
// Возвращаемое значение:
// 	Булево - Истина, пользовательские настройки для коммита существуют, иначе - Ложь;
&НаСервереБезКонтекста
Функция ЕстьПользовательскиеНастройкиВДанныхКоммита(Знач ДанныеТелаЗапроса, Знач ИдентификаторКоммита)
	
	Перем ДанныеКоммита;
	Перем Результат;
	
	Результат = Ложь;
	
	ДанныеКоммита = ПолучитьДанныеКоммитаИзТелаЗапроса(ДанныеТелаЗапроса, ИдентификаторКоммита);
	Если ДанныеКоммита = Неопределено ИЛИ ТипЗнч(ДанныеКоммита) <> Тип("Соответствие") Тогда
		Возврат Результат;
	КонецЕсли;
		
	ПользовательскиеНастройки = ДанныеКоммита.Получить("user_settings");
	
	Если ПользовательскиеНастройки <> Неопределено Тогда
		Результат = Истина;
	КонецЕсли;

	Возврат Результат;
	
КонецФункции


// Получение данных тела запроса по идентификационному номеру коммита.
// 
// Параметры:
//	ДанныеТелаЗапроса - Соответствие - преобразованные в Соответствие данные HTTP-запроса;
// 	ИскомыйИдентификатор - Строка - идентификационный номер коммита;
// Возвращаемое значение:
// 	Неопределено, Соответствие - возвращает коллекцию данных по коммиту, либо Неопределено, если данные не найдены;
&НаСервереБезКонтекста 
Функция ПолучитьДанныеКоммитаИзТелаЗапроса(Знач ДанныеТелаЗапроса, Знач ИскомыйИдентификатор = "")
	
	Перем Результат;
	Перем Коммиты;
	Перем Идентификатор;
	
	Результат = Неопределено;
	
	Если ТипЗнч(ДанныеТелаЗапроса) <> Тип("Соответствие") ИЛИ ПустаяСтрока(ИскомыйИдентификатор) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Коммиты = ДанныеТелаЗапроса.Получить("commits");
	
	Если Коммиты = Неопределено ИЛИ ТипЗнч(Коммиты) <> Тип("Массив") Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для каждого Коммит Из Коммиты Цикл

		Идентификатор = Коммит.Получить("id");
		Если Идентификатор = Неопределено ИЛИ Идентификатор <> ИскомыйИдентификатор Тогда
			Продолжить;
		КонецЕсли;
		
		Результат = Коммит;
		
		Прервать;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции



// Удаляет пользовательский вариант настроек маршрутизации для определенного коммита в данных тела запроса.
// 
// Параметры:
//	ДанныеТелаЗапроса - Соответствие - преобразованные в Соответствие данные HTTP-запроса;
// 	ИдентификаторКоммита - Строка - идентификационный номер коммита;
// 	НастройкиПоУмолчанию - Строка - (возвращаемый параметр), текст настройки маршрутизации в формате JSON
// 		из файла настроек внешнего хранилища;
&НаСервереБезКонтекста
Процедура УдалитьПользовательскиеНастройкиВДанныхКоммита(Знач ДанныеТелаЗапроса,
															Знач ИдентификаторКоммита,
															НастройкиПоУмолчанию = "")
	
	Перем ДанныеКоммита;
	Перем Настройки;
	
	ДанныеКоммита = ПолучитьДанныеКоммитаИзТелаЗапроса(ДанныеТелаЗапроса, ИдентификаторКоммита);
	Если ДанныеКоммита = Неопределено ИЛИ ТипЗнч(ДанныеКоммита) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеКоммита.Удалить("user_settings");
	Настройки = ДанныеКоммита.Получить("settings");
	
	Если Настройки <> Неопределено Тогда
		НастройкиПоУмолчанию = Настройки.Получить("json");
	КонецЕсли;

КонецПроцедуры

// Добавляет пользовательский вариант настроек маршрутизации для определенного коммита в данных тела запроса.
// 
// Параметры:
//	ДанныеТелаЗапроса - Соответствие - (возвращаемое значение), преобразованные в Соответствие данные HTTP-запроса;
// 	ИдентификаторКоммита - Строка - идентификационный номер коммита;
// 	JSON - Строка - текст настроек маршрутизации в формате JSON;
&НаСервереБезКонтекста
Процедура ДополнитьДанныеТелаЗапросаПользовательскимиНастройками(Знач ИдентификаторКоммита,
																	Знач JSON,
																	ДанныеТелаЗапроса) Экспорт
	
	Перем ДанныеКоммита;
	Перем ПользовательскиеНастройки;
	Перем Запись;
	Перем Поток;
	
	ДанныеКоммита = ПолучитьДанныеКоммитаИзТелаЗапроса(ДанныеТелаЗапроса, ИдентификаторКоммита);
	
	Если ДанныеКоммита = Неопределено ИЛИ ТипЗнч(ДанныеКоммита) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;

	Поток = Новый ПотокВПамяти();
	Запись = Новый ЗаписьДанных(Поток);
	Запись.ЗаписатьСтроку(JSON);
	Поток.Перейти(0, ПозицияВПотоке.Начало);

	ПользовательскиеНастройки = Неопределено;
	ОбщегоНазначения.ПотокВКоллекциюКакJSON(Поток, Истина, Истина, ПользовательскиеНастройки);
	
	Если ПользовательскиеНастройки <> Неопределено Тогда
		ДанныеКоммита.Вставить("user_settings", ПользовательскиеНастройки);
	КонецЕсли;

КонецПроцедуры




























&НаСервере
Процедура ЗаполнитьЗначенияНаФорме(Знач ДанныеЗаполнения, Знач Команда)
	
	Если Команда = "ОткрытьJSONТелаЗапроса" Тогда
		ЭтотОбъект.ТекстJSON = ДанныеЗаполнения;
	Иначе
		Коммиты.Загрузить(ДанныеЗаполнения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьФорму()
	
	Если Коммиты.Количество() = 0 Тогда
		Элементы.ГруппаКоммиты.Видимость = Ложь;
		Элементы.ГруппаПользовательскийВариант.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРедактированияJSON(Знач Состояние = Ложь)
	
	Если ЭтотОбъект.ПользовательскийВариант <> Состояние Тогда
		ЭтотОбъект.ПользовательскийВариант = Состояние;
	КонецЕсли;
	
	Элементы.ТекстJSON.ТолькоПросмотр = НЕ Состояние;
	Элементы.СохранитьJSON.Доступность = Состояние;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьПользовательскиеНастройки(Знач Параметры)

	Перем ДанныеТелаЗапроса;
	Перем Результат;
	
	Результат = Ложь;

	// Концептуально не храним данные на форме, поэтому будем считывать с регистра каждый раз.
	//ДанныеТелаЗапроса = РегистрыСведений.ДанныеОбработчиковСобытий.ПолучитьДанныеТелаЗапроса(Параметры.Ключ);
	ДанныеТелаЗапроса = ОбработчикиСобытий.ЗагрузитьДанныеЗапроса( Параметры.Ключ.ОбработчикСобытия, Параметры.Ключ.Ключ );
	Если ДанныеТелаЗапроса = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;

	Результат = ЕстьПользовательскиеНастройкиВДанныхКоммита(ДанныеТелаЗапроса,
																			Параметры.СохраняемыеДанные.Коммит);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопросаСохранитьJSON(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

	СохранитьJSONНаКлиенте(ДополнительныеПараметры);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаНастройкиПоУмолчанию(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Перем НастройкиПоУмолчанию;
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		УстановитьРежимРедактированияJSON(НЕ ЭтотОбъект.ПользовательскийВариант);
        Возврат;
	КонецЕсли;

	НастройкиПоУмолчанию = УдалитьПользовательскиеНастройки(ДополнительныеПараметры);
	
	ЭтотОбъект.ТекстJSON = НастройкиПоУмолчанию;
	
	ПривестиВСоответствиеТекущиеДанныеКоммитаИРеквизитовФормы();
	УстановитьРежимРедактированияJSON(ЭтотОбъект.ПользовательскийВариант);

КонецПроцедуры

&НаКлиенте
Процедура ПривестиВСоответствиеТекущиеДанныеКоммитаИРеквизитовФормы()
	
	Если Элементы.Коммиты.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Коммиты.ТекущиеДанные.ПользовательскийВариант = ЭтотОбъект.ПользовательскийВариант;
	Элементы.Коммиты.ТекущиеДанные.ТекстJSON = ЭтотОбъект.ТекстJSON;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УдалитьПользовательскиеНастройки(Знач Параметры)
	
	Перем ДанныеТелаЗапроса;
	Перем ЗаписываемыеДанные;
	Перем ХранилищеЗначенияДанныеТелаЗапроса;
	Перем Результат;
	
	Результат = "";

	// Концептуально не храним данные на форме, поэтому будем считывать с регистра каждый раз.
	//ДанныеТелаЗапроса = РегистрыСведений.ДанныеОбработчиковСобытий.ПолучитьДанныеТелаЗапроса(Параметры.Ключ);
	ДанныеТелаЗапроса = ОбработчикиСобытий.ЗагрузитьДанныеЗапроса( Параметры.Ключ.ОбработчикСобытия, Параметры.Ключ.Ключ );
	Если ДанныеТелаЗапроса = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;

	УдалитьПользовательскиеНастройкиВДанныхКоммита(ДанныеТелаЗапроса, Параметры.Коммит, Результат);
	Если НЕ ПустаяСтрока(Результат) Тогда
		ХранилищеЗначенияДанныеТелаЗапроса = Новый ХранилищеЗначения(ДанныеТелаЗапроса);
		//ЗаписываемыеДанные = Новый Структура("ДанныеТелаЗапроса", ХранилищеЗначенияДанныеТелаЗапроса);
		//РегистрыСведений.ДанныеОбработчиковСобытий.ЗаписатьЗначенияРесурсов(Параметры.Ключ, ЗаписываемыеДанные);
		ОбработчикиСобытий.СохранитьДанныеЗапроса(Параметры.Ключ.ОбработчикСобытия, Параметры.Ключ.Ключ, ДанныеТелаЗапроса ); 
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура СохранитьJSONНаКлиенте(Знач ДополнительныеПараметры)
	
	СохранитьJSONНаСервере(ДополнительныеПараметры);
	
	ЭтотОбъект.ТекстJSON = ДополнительныеПараметры.СохраняемыеДанные.JSON;
	
	ПривестиВСоответствиеТекущиеДанныеКоммитаИРеквизитовФормы();
	УстановитьРежимРедактированияJSON(ЭтотОбъект.ПользовательскийВариант);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьJSONНаСервере(Знач Параметры)
	
	Перем ДанныеТелаЗапроса;
	Перем ХранилищеЗначенияДанныеТелаЗапроса;	
	
	// Концептуально не храним данные на форме, поэтому будем считывать с регистра каждый раз.
	//ДанныеТелаЗапроса = РегистрыСведений.ДанныеОбработчиковСобытий.ПолучитьДанныеТелаЗапроса(Параметры.Ключ);
	ДанныеТелаЗапроса = ОбработчикиСобытий.ЗагрузитьДанныеЗапроса( Параметры.Ключ.ОбработчикСобытия, Параметры.Ключ.Ключ );
	Если ДанныеТелаЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнитьДанныеТелаЗапросаПользовательскимиНастройками(Параметры.СохраняемыеДанные.Коммит,
			Параметры.СохраняемыеДанные.JSON, ДанныеТелаЗапроса);
	//ХранилищеЗначенияДанныеТелаЗапроса = Новый ХранилищеЗначения(ДанныеТелаЗапроса);
	//Данные = Новый Структура("ДанныеТелаЗапроса", ХранилищеЗначенияДанныеТелаЗапроса);
	
	ОбработчикиСобытий.СохранитьДанныеЗапроса(Параметры.Ключ.ОбработчикСобытия, Параметры.Ключ.Ключ, ДанныеТелаЗапроса );
	//РегистрыСведений.ДанныеОбработчиковСобытий.ЗаписатьЗначенияРесурсов(Параметры.Ключ, Данные); 
	
КонецПроцедуры


#КонецОбласти