#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере( Отказ, СтандартнаяОбработка )
	
	Если ( Параметры.КлючЗаписи.Пустой() ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УстановитьВидФормы( Параметры.ИмяКоманды );
	ЗаполнитьДанныеФормы( Параметры.КлючЗаписи );

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПользовательскийВариантПриИзменении( Элемент )
	
	Перем ТекущиеДанные;
	Перем ПараметрыВопроса;
	Перем ТекстВопроса;
	Перем Оповещение;
	
	ТекущиеДанные = Элементы.Commits.ТекущиеДанные;
	
	Если ( ТекущиеДанные = Неопределено ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ( ТекущиеДанные.IsUserSettings ) Тогда
		
		УстановитьРежимРедактированияJSON( ТекущиеДанные.IsUserSettings );
		
	Иначе
		
		ПараметрыВопроса = Новый Структура( "КлючЗаписи, ТекущиеДанные", Параметры.КлючЗаписи, ТекущиеДанные );
		Оповещение = Новый ОписаниеОповещения( "ПослеЗакрытияВопросаСбросНастроек", ЭтотОбъект, ПараметрыВопроса );
		ТекстВопроса = НСтр( "ru = 'Сбросить настройки маршрутизации на значения по умолчанию?'" );
		
		ПоказатьВопрос( Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет );
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКоммиты

&НаКлиенте
Процедура CommitsПриАктивизацииСтроки(Элемент)
	
	Если ( Элемент.ТекущиеДанные = Неопределено ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УстановитьРежимРедактированияJSON( Элемент.ТекущиеДанные.IsUserSettings );
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьJSON(Команда)
	
	Перем ТекущиеДанные;
	Перем СохраняемыеДанные;
	Перем ДополнительныеПараметры;
	Перем Режим;
	Перем Оповещение;
	
	ТекущиеДанные = Элементы.Commits.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохраняемыеДанные = Новый Структура("CommitSHA, JSON", ТекущиеДанные.CommitSHA, ТекущиеДанные.JSON);
	ДополнительныеПараметры = Новый ФиксированнаяСтруктура("КлючЗаписи, СохраняемыеДанные", Параметры.КлючЗаписи, СохраняемыеДанные);
	
	Если ЕстьПользовательскиеНастройки(Параметры.КлючЗаписи, ТекущиеДанные.CommitSHA) Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаСохранитьJSON", ЭтаФорма, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Пользовательские настройки уже существуют, перезаписать?'"), Режим);
	Иначе
		СохранитьJSONНаКлиенте(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидФормы( Знач ИмяКоманды )
	
	Если ( ИмяКоманды = "ОткрытьТекстЗапросаВРедактореJSON" ) Тогда

		ЭтотОбъект.ЭтоЗапрос = Истина;
		ЭтаФорма.Заголовок = "Содержимое запроса";

	ИначеЕсли ( ИмяКоманды = "ОткрытьНастройкиМаршрутизацииВРедактореJSON" ) Тогда
		
		ЭтотОбъект.ЭтоЗапрос = Ложь;
		ЭтаФорма.Заголовок = "Настройка маршрутизации";
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Недопустимая команда открытия редактора JSON.'");
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормы( Знач КлючЗаписи )
	
	Перем Query;
	Перем QueryCommits;
	Перем Settings;
	Перем UserSettings;
	Перем НоваяСтрока;
	
	Query = ОбработчикиСобытий.ЗагрузитьДанныеЗапроса( КлючЗаписи.ОбработчикСобытия, КлючЗаписи.Ключ );
	
	Если ( Query = Неопределено ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ( ЭтотОбъект.ЭтоЗапрос ) Тогда
		
		НоваяСтрока = ЭтотОбъект.Commits.Добавить();
		НоваяСтрока.JSON = Query.Получить( "json" );
		
	Иначе

		QueryCommits = Query.Получить( "commits" );
		
		Для каждого Commit Из QueryCommits Цикл
			
			НоваяСтрока = ЭтотОбъект.Commits.Добавить();
			НоваяСтрока.CommitSHA = Commit.Получить( "id" );
			
			UserSettings = Commit.Получить( "user_settings" );
			
			Settings = ?( UserSettings = Неопределено, Commit.Получить("settings"),  UserSettings );
			
			Если ( Settings = Неопределено ) Тогда

				Продолжить;
				
			КонецЕсли;
			
			НоваяСтрока.JSON = Settings.Получить( "json" );
			НоваяСтрока.IsUserSettings = ( UserSettings <> Неопределено );
			
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
	
	Если ( ЭтотОбъект.ЭтоЗапрос ) Тогда
		
		Элементы.ГруппаCommits.Видимость = Ложь;
		Элементы.ГруппаПользовательскийВариант.Видимость = Ложь;
		Элементы.CommitsJSONQuery.Видимость = Истина;
		
	Иначе
		
		Элементы.CommitsJSONRouting.Видимость = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРедактированияJSON( Знач Редактировать = Ложь )
	
	Перем ЭлементРедактированияJSON;
	
	Если ( ЭтотОбъект.ЭтоЗапрос ) Тогда
		
		ЭлементРедактированияJSON  = Элементы.CommitsJSONQuery;
		
	Иначе

		ЭлементРедактированияJSON = Элементы.CommitsJSONRouting;
		
	КонецЕсли;
	
	ЭлементРедактированияJSON.ТолькоПросмотр = НЕ Редактировать;
	Элементы.СохранитьJSON.Доступность = Редактировать;
		
КонецПроцедуры

&НаСервереБезКонтекста 
Функция FindCommitById( Знач ДанныеЗапроса, Знач CommitSHA )
	
	Перем QueryCommits;

	QueryCommits = ДанныеЗапроса.Получить("commits");
	
	Для каждого Commit Из QueryCommits Цикл

		Если ( Commit.Получить("id") <> CommitSHA ) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Возврат Commit;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьПользовательскиеНастройки( Знач КлючЗаписи, Знач CommitSHA, ТекущиеНастройки )
	
	Перем ДанныеЗапроса;
	Перем Commit;
	Перем ПервоначальныеНастройки;

	ДанныеЗапроса = ОбработчикиСобытий.ЗагрузитьДанныеЗапроса( КлючЗаписи.ОбработчикСобытия, КлючЗаписи.Ключ );
	
	Если ( НЕ ЗначениеЗаполнено(ДанныеЗапроса) ) Тогда
		
		Возврат;
		
	КонецЕсли;

	Commit = FindCommitById( ДанныеЗапроса, CommitSHA );
	ПервоначальныеНастройки = Commit.Получить( "settings" ).Получить( "json" );
	Commit.Удалить( "user_settings" );
	
	Если ( ПустаяСтрока(ПервоначальныеНастройки) ИЛИ ПервоначальныеНастройки = ТекущиеНастройки ) Тогда
		
		Возврат;
		
	КонецЕсли;		
				
	ОбработчикиСобытий.СохранитьДанныеЗапроса( КлючЗаписи.ОбработчикСобытия, КлючЗаписи.Ключ, ДанныеЗапроса );
	
	ТекущиеНастройки = ПервоначальныеНастройки; 

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаСбросНастроек( РезультатВопроса, ДополнительныеПараметры ) Экспорт
	
	Перем ТекущиеДанные;
	
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	
	Если ( РезультатВопроса = КодВозвратаДиалога.Нет ) Тогда
		
		ТекущиеДанные.IsUserSettings = Истина;
		
        Возврат;
        
	КонецЕсли;

	УдалитьПользовательскиеНастройки( ДополнительныеПараметры.КлючЗаписи, ТекущиеДанные.CommitSHA, ТекущиеДанные.JSON );
	
	УстановитьРежимРедактированияJSON( Ложь );

КонецПроцедуры



































// Добавляет пользовательский вариант настроек маршрутизации для определенного коммита в данных тела запроса.
// 
// Параметры:
//	ДанныеТелаЗапроса - Соответствие - (возвращаемое значение), преобразованные в Соответствие данные HTTP-запроса;
// 	ИдентификаторКоммита - Строка - идентификационный номер коммита;
// 	JSON - Строка - текст настроек маршрутизации в формате JSON;
&НаСервереБезКонтекста
Процедура ДополнитьДанныеТелаЗапросаПользовательскимиНастройками(Знач ИдентификаторКоммита,
																	Знач JSON,
																	ДанныеТелаЗапроса) Экспорт
	
	Перем ДанныеКоммита;
	Перем ПользовательскиеНастройки;
	Перем Запись;
	Перем Поток;
	
	ДанныеКоммита = FindCommitById(ДанныеТелаЗапроса, ИдентификаторКоммита);
	
	Если ДанныеКоммита = Неопределено ИЛИ ТипЗнч(ДанныеКоммита) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	
	Поток = ПолучитьДвоичныеДанныеИзСтроки( JSON, КодировкаТекста.UTF8 ).ОткрытьПотокДляЧтения();
	ПользовательскиеНастройки = КоннекторHTTP.JsonВОбъект( Поток );		
	ОбщегоНазначения.ДополнитьКоллекциюТекстомИзПотока( Поток, "json", ПользовательскиеНастройки );
	ДанныеКоммита.Вставить("user_settings", ПользовательскиеНастройки);		
	

КонецПроцедуры


&НаСервереБезКонтекста
Функция ЕстьПользовательскиеНастройки( Знач КлючЗаписи, Знач CommitSHA )

	Перем Commit;
	
	ДанныеЗапроса = ОбработчикиСобытий.ЗагрузитьДанныеЗапроса( КлючЗаписи.ОбработчикСобытия, КлючЗаписи.Ключ );
	Commit = FindCommitById( ДанныеЗапроса, CommitSHA );
	
	Возврат ( Commit.Получить("user_settings") <> Неопределено );

	
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопросаСохранитьJSON(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

	СохранитьJSONНаКлиенте(ДополнительныеПараметры);

КонецПроцедуры












&НаКлиенте
Процедура СохранитьJSONНаКлиенте(Знач ДополнительныеПараметры)
	
	Перем ИнформацияОбОшибке;
	Перем ТекстПричиныОшибки;
	Перем ДополнительнаяИнформация; 
	
	Попытка
		
		СохранитьJSONНаСервере(ДополнительныеПараметры);
		
	Исключение
		
		ТекстПричиныОшибки = НСтр("ru = 'Непредвиденный символ при чтении JSON'");
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		Если ( ИнформацияОбОшибке.ЯвляетсяОшибкойКатегории(КатегорияОшибки.ОшибкаВоВремяВыполненияВстроенногоЯзыка)
			И ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке) = ТекстПричиныОшибки ) Тогда

			ДополнительнаяИнформация = НСтр("ru = 'Текст должен быть в формате JSON.'");
			ОбработкаОшибок.ПоказатьИнформациюОбОшибке( ИнформацияОбОшибке,
														ВариантОтображенияСообщенияОбОшибке.КраткоеПредставлениеОшибки,
														ДополнительнаяИнформация );
	
		Иначе
			
			ОбработкаОшибок.ПоказатьИнформациюОбОшибке( ИнформацияОбОшибке );
			
		КонецЕсли;
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьJSONНаСервере(Знач Параметры)
	
	Перем ДанныеТелаЗапроса;
	
	// Концептуально не храним данные на форме, поэтому будем считывать с регистра каждый раз.
	ДанныеТелаЗапроса = ОбработчикиСобытий.ЗагрузитьДанныеЗапроса( Параметры.КлючЗаписи.ОбработчикСобытия, Параметры.КлючЗаписи.Ключ );
	Если ДанныеТелаЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнитьДанныеТелаЗапросаПользовательскимиНастройками(Параметры.СохраняемыеДанные.CommitSHA,
			Параметры.СохраняемыеДанные.JSON, ДанныеТелаЗапроса);
	
	
	ОбработчикиСобытий.СохранитьДанныеЗапроса(Параметры.КлючЗаписи.ОбработчикСобытия, Параметры.КлючЗаписи.Ключ, ДанныеТелаЗапроса );	


КонецПроцедуры


#КонецОбласти